{
  "Parameters": {
    "KeyPair": {
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Default": "keypair",
      "Description": "Event Engine Name of the EC2 KeyPair generated for the Team"
    },
    "LatestAMI": {
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
      "Default": "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-ebs",
      "Description": "Latest AMI from linux"
    },
    "SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
      "Default": "/aws/service/ami-amazon-linux-latest/amzn-ami-hvm-x86_64-gp2"
    }
  },
  "Resources": {
    "WebsiteVPCD8B49DC8": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.40.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "WebsiteStack/WebsiteVPC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "WebsiteStack/WebsiteVPC/Resource"
      }
    },
    "WebsiteVPCpublicSubnet1Subnet8F93AE85": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.40.0.0/24",
        "VpcId": {
          "Ref": "WebsiteVPCD8B49DC8"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "WebsiteStack/WebsiteVPC/publicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "WebsiteStack/WebsiteVPC/publicSubnet1/Subnet"
      }
    },
    "WebsiteVPCpublicSubnet1RouteTableF14274A6": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "WebsiteVPCD8B49DC8"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "WebsiteStack/WebsiteVPC/publicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "WebsiteStack/WebsiteVPC/publicSubnet1/RouteTable"
      }
    },
    "WebsiteVPCpublicSubnet1RouteTableAssociationBCEF456E": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "WebsiteVPCpublicSubnet1RouteTableF14274A6"
        },
        "SubnetId": {
          "Ref": "WebsiteVPCpublicSubnet1Subnet8F93AE85"
        }
      },
      "Metadata": {
        "aws:cdk:path": "WebsiteStack/WebsiteVPC/publicSubnet1/RouteTableAssociation"
      }
    },
    "WebsiteVPCpublicSubnet1DefaultRoute86DB016D": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "WebsiteVPCpublicSubnet1RouteTableF14274A6"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "WebsiteVPCIGWD7296D39"
        }
      },
      "DependsOn": [
        "WebsiteVPCVPCGW9965E50A"
      ],
      "Metadata": {
        "aws:cdk:path": "WebsiteStack/WebsiteVPC/publicSubnet1/DefaultRoute"
      }
    },
    "WebsiteVPCpublicSubnet2Subnet370560E0": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.40.1.0/24",
        "VpcId": {
          "Ref": "WebsiteVPCD8B49DC8"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "WebsiteStack/WebsiteVPC/publicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "WebsiteStack/WebsiteVPC/publicSubnet2/Subnet"
      }
    },
    "WebsiteVPCpublicSubnet2RouteTable2F7E15E9": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "WebsiteVPCD8B49DC8"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "WebsiteStack/WebsiteVPC/publicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "WebsiteStack/WebsiteVPC/publicSubnet2/RouteTable"
      }
    },
    "WebsiteVPCpublicSubnet2RouteTableAssociation936DE3B4": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "WebsiteVPCpublicSubnet2RouteTable2F7E15E9"
        },
        "SubnetId": {
          "Ref": "WebsiteVPCpublicSubnet2Subnet370560E0"
        }
      },
      "Metadata": {
        "aws:cdk:path": "WebsiteStack/WebsiteVPC/publicSubnet2/RouteTableAssociation"
      }
    },
    "WebsiteVPCpublicSubnet2DefaultRouteB89691E7": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "WebsiteVPCpublicSubnet2RouteTable2F7E15E9"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "WebsiteVPCIGWD7296D39"
        }
      },
      "DependsOn": [
        "WebsiteVPCVPCGW9965E50A"
      ],
      "Metadata": {
        "aws:cdk:path": "WebsiteStack/WebsiteVPC/publicSubnet2/DefaultRoute"
      }
    },
    "WebsiteVPCIGWD7296D39": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "WebsiteStack/WebsiteVPC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "WebsiteStack/WebsiteVPC/IGW"
      }
    },
    "WebsiteVPCVPCGW9965E50A": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "WebsiteVPCD8B49DC8"
        },
        "InternetGatewayId": {
          "Ref": "WebsiteVPCIGWD7296D39"
        }
      },
      "Metadata": {
        "aws:cdk:path": "WebsiteStack/WebsiteVPC/VPCGW"
      }
    },
    "NewsBlogRole6F2BF73E": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "ec2.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonSSMManagedInstanceCore"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "WebsiteStack/NewsBlogRole/Resource"
      }
    },
    "NewsBlogAutoScalingGroupInstanceSecurityGroup3BB44488": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "WebsiteStack/NewsBlogAutoScalingGroup/InstanceSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "WebsiteStack/NewsBlogAutoScalingGroup"
          }
        ],
        "VpcId": {
          "Ref": "WebsiteVPCD8B49DC8"
        }
      },
      "Metadata": {
        "aws:cdk:path": "WebsiteStack/NewsBlogAutoScalingGroup/InstanceSecurityGroup/Resource"
      }
    },
    "NewsBlogAutoScalingGroupInstanceSecurityGroupfromWebsiteStackLBSecurityGroupB29745CF807D785AAB": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "Load balancer to target",
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "NewsBlogAutoScalingGroupInstanceSecurityGroup3BB44488",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "LBSecurityGroup8A41EA2B",
            "GroupId"
          ]
        },
        "ToPort": 80
      },
      "Metadata": {
        "aws:cdk:path": "WebsiteStack/NewsBlogAutoScalingGroup/InstanceSecurityGroup/from WebsiteStackLBSecurityGroupB29745CF:80"
      }
    },
    "NewsBlogAutoScalingGroupInstanceProfile7F6AC159": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "NewsBlogRole6F2BF73E"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "WebsiteStack/NewsBlogAutoScalingGroup/InstanceProfile"
      }
    },
    "NewsBlogAutoScalingGroupLaunchConfig4561DC98": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter"
        },
        "InstanceType": "t3.micro",
        "IamInstanceProfile": {
          "Ref": "NewsBlogAutoScalingGroupInstanceProfile7F6AC159"
        },
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "NewsBlogAutoScalingGroupInstanceSecurityGroup3BB44488",
              "GroupId"
            ]
          }
        ],
        "UserData": {
          "Fn::Base64": "#!/bin/bash\nyum install -y nginx\nchkconfig nginx on\nservice nginx start\n/bin/mv /usr/share/nginx/html/index.html /usr/share/nginx/html/index.html.orig\n/bin/echo \"Hello World from $(hostname -f) on port 80\" >  /usr/share/nginx/html/index.html"
        }
      },
      "DependsOn": [
        "NewsBlogRole6F2BF73E"
      ],
      "Metadata": {
        "aws:cdk:path": "WebsiteStack/NewsBlogAutoScalingGroup/LaunchConfig"
      }
    },
    "NewsBlogAutoScalingGroupASG9863ACD0": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "MaxSize": "2",
        "MinSize": "1",
        "DesiredCapacity": "2",
        "LaunchConfigurationName": {
          "Ref": "NewsBlogAutoScalingGroupLaunchConfig4561DC98"
        },
        "Tags": [
          {
            "Key": "Name",
            "PropagateAtLaunch": true,
            "Value": "WebsiteStack/NewsBlogAutoScalingGroup"
          }
        ],
        "TargetGroupARNs": [
          {
            "Ref": "LBListenerTargetsGroup76EF81E8"
          }
        ],
        "VPCZoneIdentifier": [
          {
            "Ref": "WebsiteVPCpublicSubnet1Subnet8F93AE85"
          },
          {
            "Ref": "WebsiteVPCpublicSubnet2Subnet370560E0"
          }
        ]
      },
      "UpdatePolicy": {
        "AutoScalingScheduledAction": {
          "IgnoreUnmodifiedGroupSizeProperties": true
        }
      },
      "Metadata": {
        "aws:cdk:path": "WebsiteStack/NewsBlogAutoScalingGroup/ASG"
      }
    },
    "NewsBlogAutoScalingGroupScalingPolicyAModestLoadWebsiteStackNewsBlogAutoScalingGroupBAB38614": {
      "Type": "AWS::AutoScaling::ScalingPolicy",
      "Properties": {
        "AutoScalingGroupName": {
          "Ref": "NewsBlogAutoScalingGroupASG9863ACD0"
        },
        "PolicyType": "TargetTrackingScaling",
        "TargetTrackingConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "ALBRequestCountPerTarget",
            "ResourceLabel": {
              "Fn::Join": [
                "",
                [
                  {
                    "Fn::Select": [
                      1,
                      {
                        "Fn::Split": [
                          "/",
                          {
                            "Ref": "LBListener49E825B4"
                          }
                        ]
                      }
                    ]
                  },
                  "/",
                  {
                    "Fn::Select": [
                      2,
                      {
                        "Fn::Split": [
                          "/",
                          {
                            "Ref": "LBListener49E825B4"
                          }
                        ]
                      }
                    ]
                  },
                  "/",
                  {
                    "Fn::Select": [
                      3,
                      {
                        "Fn::Split": [
                          "/",
                          {
                            "Ref": "LBListener49E825B4"
                          }
                        ]
                      }
                    ]
                  },
                  "/",
                  {
                    "Fn::GetAtt": [
                      "LBListenerTargetsGroup76EF81E8",
                      "TargetGroupFullName"
                    ]
                  }
                ]
              ]
            }
          },
          "TargetValue": 60
        }
      },
      "DependsOn": [
        "LBListener49E825B4",
        "LBListenerTargetsGroup76EF81E8"
      ],
      "Metadata": {
        "aws:cdk:path": "WebsiteStack/NewsBlogAutoScalingGroup/ScalingPolicyAModestLoad-WebsiteStack--NewsBlogAutoScalingGroup/Resource"
      }
    },
    "LB8A12904C": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "false"
          }
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "LBSecurityGroup8A41EA2B",
              "GroupId"
            ]
          }
        ],
        "Subnets": [
          {
            "Ref": "WebsiteVPCpublicSubnet1Subnet8F93AE85"
          },
          {
            "Ref": "WebsiteVPCpublicSubnet2Subnet370560E0"
          }
        ],
        "Type": "application"
      },
      "DependsOn": [
        "WebsiteVPCpublicSubnet1DefaultRoute86DB016D",
        "WebsiteVPCpublicSubnet2DefaultRouteB89691E7"
      ],
      "Metadata": {
        "aws:cdk:path": "WebsiteStack/LB/Resource"
      }
    },
    "LBSecurityGroup8A41EA2B": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Automatically created Security Group for ELB WebsiteStackLB2004CDF4",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80
          }
        ],
        "VpcId": {
          "Ref": "WebsiteVPCD8B49DC8"
        }
      },
      "Metadata": {
        "aws:cdk:path": "WebsiteStack/LB/SecurityGroup/Resource"
      }
    },
    "LBSecurityGrouptoWebsiteStackNewsBlogAutoScalingGroupInstanceSecurityGroup2204B94E80FC90B7D6": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Fn::GetAtt": [
            "LBSecurityGroup8A41EA2B",
            "GroupId"
          ]
        },
        "IpProtocol": "tcp",
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "NewsBlogAutoScalingGroupInstanceSecurityGroup3BB44488",
            "GroupId"
          ]
        },
        "FromPort": 80,
        "ToPort": 80
      },
      "Metadata": {
        "aws:cdk:path": "WebsiteStack/LB/SecurityGroup/to WebsiteStackNewsBlogAutoScalingGroupInstanceSecurityGroup2204B94E:80"
      }
    },
    "LBListener49E825B4": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "LBListenerTargetsGroup76EF81E8"
            },
            "Type": "forward"
          }
        ],
        "LoadBalancerArn": {
          "Ref": "LB8A12904C"
        },
        "Port": 80,
        "Protocol": "HTTP"
      },
      "Metadata": {
        "aws:cdk:path": "WebsiteStack/LB/Listener/Resource"
      }
    },
    "LBListenerTargetsGroup76EF81E8": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "Port": 80,
        "Protocol": "HTTP",
        "TargetType": "instance",
        "VpcId": {
          "Ref": "WebsiteVPCD8B49DC8"
        }
      },
      "Metadata": {
        "aws:cdk:path": "WebsiteStack/LB/Listener/TargetsGroup/Resource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Modules": "aws-cdk=1.75.0,@aws-cdk/assets=1.83.0,@aws-cdk/aws-autoscaling=1.83.0,@aws-cdk/aws-autoscaling-common=1.83.0,@aws-cdk/aws-cloudwatch=1.83.0,@aws-cdk/aws-ec2=1.83.0,@aws-cdk/aws-elasticloadbalancingv2=1.83.0,@aws-cdk/aws-events=1.83.0,@aws-cdk/aws-iam=1.83.0,@aws-cdk/aws-kms=1.83.0,@aws-cdk/aws-logs=1.83.0,@aws-cdk/aws-s3=1.83.0,@aws-cdk/aws-s3-assets=1.83.0,@aws-cdk/aws-ssm=1.83.0,@aws-cdk/cloud-assembly-schema=1.83.0,@aws-cdk/core=1.83.0,@aws-cdk/cx-api=1.83.0,@aws-cdk/region-info=1.83.0,jsii-runtime=node.js/v15.3.0"
      },
      "Metadata": {
        "aws:cdk:path": "WebsiteStack/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Conditions": {
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  }
}